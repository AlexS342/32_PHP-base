<?php
// Подготовьте два массива одинаковой размерности, но не менее 10 элементов, с произвольными числовыми значениями. 
// Разработайте скрипт для запуска из командной строки, выполняющий перемножение элементов двух массивов и 
// выводящий результат в консоль с помощью print_r. Умножение должно выполняться только между элементами 
// соответствующих индексов, то есть нулевой элемент первого массива умножается на нулевой элемент второго массива;

$firstArr = range(1, 10);
$secondArr = range(1, 10);

shuffle($secondArr);
shuffle($firstArr);

$result = [];
$storage =[];

for($i = 0; $i < count($firstArr); $i++){
    $result[] = $firstArr[$i] * $secondArr[$i];
}

foreach ($firstArr as $key => $third) {
    $storage[] = $third * $secondArr[$key];
}

echo "Вариант с FOR:\n";
for($i = 0; $i < 10; $i++){
    echo '$firstArr[' . $i . '] * $secondArr[' . $i . '] = $result[' . $i . '] => ' . "$firstArr[$i] * $secondArr[$i] = $result[$i];\n";
}

echo "Вариант с FOREACH:\n";
for($i = 0; $i < count($firstArr); $i++){
    echo '$firstArr[' . $i . '] * $secondArr[' . $i . '] = $storage[' . $i . '] => ' . "$firstArr[$i] * $secondArr[$i] = $storage[$i];\n";
}

// Вывод:
// В данном примере для меня оказался более наглядным и читаемым цикл FOR, так 
// как в переборе участвуют имена массивов, над которыми производятся действия, 
// а в качестве ключа используется уже привычная $i
// В цикле FOREACH появляется переменная с элементом массива, что немного 
// усложняем код, но не сильно.