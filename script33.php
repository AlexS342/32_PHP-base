<?php
// * Подготовьте многомерный ассоциативный массив следующего вида:
// $students = [
//     'ИТ20' => [
//         'Иванов Иван' => 5,
//         'Кириллов Кирилл' => 3
//     ],
//     'БАП20' => [
//         'Антонов Антон' => 4
//     ]
// ];
// В качестве ключей массива используются названия групп. В качестве элементов — отношение студента 
// и его оценки. Добавьте произвольные имена студентов и их оценки в обе группы. После подготовки 
// массива, реализуйте скрипт командной строки, выполняющий следующие вычисления:
//     a)  Вычислить арифметическое среднее по всем оценкам в рамках группы. Вывести на 
// экран название группы с самым большим вычисленным значением успеваемости;
//     б)  Составить список на отчисление, в который попадают студенты из любой группы, имеющие 
//         оценку ниже трёх. В списке студенты должны быть сгруппированы по их группе. Выведите 
//         полученные данные в консоль, с помощью функции print_r;


// Я предпочел сосздать свой уникальный массив студентов. К тому же в задании не сказано, что я должен взять готовый массив

$surnameM = array('Рогозин', 'Золин', 'Мещерякова', 'Хромченко', 'Каньков', 'Зонов', 'Никифоров', 'Калинин', 'Нырко', 'Белорусов',);
$surnameW = array('Смирнова', 'Архаткина', 'Мещерякова', 'Саврасова', 'Хромченко', 'Протасова', 'Нырко', 'Ярилова', 'Ягода', 'Яброва',);

$nameM = array('Юрий', 'Евгений', 'Владимир', 'Николай', 'Юлиан', 'Платон', 'Назар', 'Ефрем', 'Тимур', 'Владислав', 'Владилен',);
$nameW = array('Анджела', 'Розалия', 'Майя', 'Зинаида', 'Фаина', 'Мария', 'Владислава', 'Христина', 'Екатерина', 'Юлия', 'Ольга',);

$patronymicM = array('Данилович', 'Антонович', 'Алексеевич', 'Прокофиевич', 'Моисеевич', 'Вадимович', 'Прохорович', 'Изяславович', 'Чеславович', 'Леонтиевич', 'Арсениевич',);
$patronymicW = array('Романовна', 'Максимовна', 'Евгеневна', 'Адольфовна', 'Серафимовна', 'Леонидовна', 'Николаевна', 'Ивановна', 'Елизаровна', 'Никитевна', 'Потаповна',);

$groups = array('ЭПР-234', 'КРН-768', 'ВМП-142', 'ЗФС-446');

foreach($surnameM as $surname){
    foreach($nameM as $name){
        foreach($patronymicM as $patronymic){
            $mans[] = "$surname" . ' ' . "$name" . ' ' . "$patronymic";
        }
    }
}

foreach($surnameW as $surname){
    foreach($nameW as $name){
        foreach($patronymicW as $patronymic){
            $womans[] = "$surname" . ' ' . "$name" . ' ' . "$patronymic";
        }
    }
}

$students = array_merge($mans, $womans);

shuffle($groups);
shuffle($students);

for($i = 0; $i < rand(2, 4); $i++){

    $MultiArray[$groups[$i]] = [];

    $countStudent = rand(7, 15);

    for($j = 0; $j < $countStudent; $j++){
        $random = rand(0, 1);
        $mark = (rand(0, 100) % 5) + 1;

        $student = array_shift($students);
        $MultiArray[$groups[$i]][$student] = $mark;
    }
}

// Так как массив кажды раз обновляется в случайном порятке, то перед выводом 
// результатов было решено вывести сам массив.
echo "Массив студентов для выполнения задания №3.1:\n";
print_r($MultiArray);
echo "\n";

$averageValue = [];

foreach($MultiArray as $key => $group){
    $averageValue[$key] = round((array_sum($group) / count($group)), 2, PHP_ROUND_HALF_UP);
}

arsort($averageValue);

$win = array_key_first($averageValue);

echo "Группа $win выйграла в оценочном зачете с результатом $averageValue[$win]\n\n";

echo "Список студентов на отчисление:\n";

// foreach($MultiArray as $key => $grop){
//     echo "\nГруппа $key\n";
//     foreach($grop as $student => $mark){
//         if($mark < 3){
//             echo "$student => $mark\n";
//         }
//     }
// }
// Как мне кажется, это вполне читаемый и соответствующий условию задания 
// вариант составления списка бездарей. Но ...
// Но я хорошо помню, что логика и вывод данных, это два отдельных блока. И по 
// этому код становится больше, за то массив учеников в плохими оценками 
// доступен для далнейшей обработки.

foreach($MultiArray as $key => $grop){

    foreach($grop as $student => $mark){
        if($mark < 3){
            $toEliminate[$key][] = $student;
        }
    }
}

foreach($toEliminate as $key => $group) {
    echo "\nГруппа(122) $key\n";
    foreach($group as $student){
        echo "$student\n";
    }
}

echo "\nСтудентам, попавши в этот список необходимо срочно явится в декат за документами.\n";
